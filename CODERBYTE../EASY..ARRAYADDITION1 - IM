
  ----------------------------------- ARRAYADDITION1
Description: For this challenge you will determine if numbers in an array can add up to a certain number in the array.
have the function ArrayAdditionI(arr) take the array of numbers stored in arr and return the string true if any
combination of numbers in the array can be added up to equal the largest number in the array, otherwise return
the string false. For example: if arr contains [4, 6, 23, 10, 1, 3] the output should return true
because 4 + 6 + 10 + 3 = 23. The array will not be empty, will not contain all the same elements,
and may contain negative numbers.

1.
function ArrayAdditionI(arr) {
  if (arr.length <= 1) {
    return false;
  } else {
    var max = Math.max.apply(null, arr),
        remaining = arr.filter(function (val) {
          return val !== max;
        });

    function addToNum(totalSoFar, remainingArray, max) {
      if (totalSoFar === max) {
        return true;
      } else if (totalSoFar > max) {
        return false;
      } else if (remainingArray.length === 0) {
        return false;
      } else {
        for (var i = 0; i < remainingArray.length; i += 1) {
          if (addToNum(totalSoFar + remainingArray[i], remainingArray.slice(0, i).concat(remainingArray.slice(i + 1)), max)) {
            return true;
          }
        }
        return false;
      }
    };

    return addToNum(0, remaining, max);
  }
};







2.
function ArrayAdditionI(arr) {
	var arrSort = arr.sort(function(a,b){return a-b});
		//sorts all numbers in the array from smallest to largest
	var popSort = arrSort.pop();
		//pops out the last number, realized that there could possibly be duplicate numbers

	var arrNotGreatest = function(arr) {
		return arr != popSort;
	}

	var filter = arr.filter(arrNotGreatest);
		//created an array that does not contain all occurrences of the largest number
		//and named this array under the variable filter

    var sumArr = filter.reduce(function(a,b){return a+b});
    	//added up all the elements in this array

    return sumArr == popSort;
    	//compared the sum to the highest number
};









3.
function getCombinations(chars) {
  var result = [];
  var f = function(prefix, chars) {
    for (var i = 0; i < chars.length; i++) {
      result.push(prefix.concat(chars[i]));
      f(prefix.concat(chars[i]), chars.slice(i + 1));
    }
  }
  f([], chars);
  return result;
}

function sum(arr) {
  var v = 0;
  for (var i = 0; i < arr.length; i++) {
    v += arr[i];
  }
  return v;
}

function ArrayAdditionI(arr) {
  arr.sort(function (a, b) {
    return a - b;
  });
  var largest = arr.pop();
  var c = getCombinations(arr);
  for (var i = 0; i < c.length; i++) {
    if (sum(c[i]) === largest) {
      return true;
    }
  }
  return false;
}
